.node-imageComponent {
  position: relative;
}

.node-imageComponent.ProseMirror-selectednode {
  z-index: 1;
}

/* hide the moveable control box when not selected */
.node-imageComponent:not(.ProseMirror-selectednode) .moveable-control-box {
  display: none !important;
}

.image-component {
  position: relative;
  user-select: auto;
  display: inline-flex;
}

.image-component img {
  margin-bottom: 0;
}

.image-component img[data-keep-ratio]:not([data-keep-ratio='false']) {
  width: 100%;
  height: auto;
  object-fit: contain;
}

.image-component img[data-keep-ratio='false'] {
  object-fit: fill;
}

.image-component .ghost {
  display: none;
  pointer-events: none;
  position: absolute;
  top: 0;
}

.image-component .ghost > img {
  opacity: 0.3;
}

.node-imageComponent.ProseMirror-selectednode .ghost {
  display: inline-flex;
}

/* caption input */
.image-component > .caption {
  z-index: 1;
  cursor: text;
  outline: none;
  padding: 5px;
  color: white;
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  inset: auto 0 0;
  margin: auto;
  white-space: pre-wrap;
  word-break: break-word;
}

.image-component > .caption::before {
  position: absolute;
}

.image-component > .caption:empty::before {
  content: var(--caption-placeholder, 'Enter a caption...');
}

p:has(.node-imageComponent) {
  display: flex;
  flex-wrap: wrap;
}

/* these styles are required for aligning the image */
p:has(.node-imageComponent)[style*='text-align: center'] {
  justify-content: center;
}

p:has(.node-imageComponent)[style*='text-align: right'] {
  justify-content: flex-end;
}

p:has(.node-imageComponent)[style*='text-align: left'] {
  justify-content: flex-start;
}

p:has(.node-imageComponent)[style*='text-align: justify'] {
  justify-content: space-between;
}
